(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{537:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"/images/2019/12/01/7.jpeg",alt:"",width:"1200",height:"512",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_2019-08-10-css-flex-相关的所有属性-并说明作用-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-10-css-flex-相关的所有属性-并说明作用-✅"}},[t._v("#")]),t._v(" 2019-08-10: css flex 相关的所有属性，并说明作用 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flex 布局教程：语法篇"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("容器属性\n"),a("ul",[a("li",[a("code",[t._v("display: flex")])]),t._v(" "),a("li",[a("code",[t._v("display: inline-flex")])]),t._v(" "),a("li",[a("code",[t._v("flex-direction")])]),t._v(" "),a("li",[a("code",[t._v("flex-wrap")])]),t._v(" "),a("li",[a("code",[t._v("flex-flow")])]),t._v(" "),a("li",[a("code",[t._v("justify-content")])]),t._v(" "),a("li",[a("code",[t._v("justify-items")])]),t._v(" "),a("li",[a("code",[t._v("align-items")])]),t._v(" "),a("li",[a("code",[t._v("align-content")])])])]),t._v(" "),a("li",[t._v("项目属性\n"),a("ul",[a("li",[a("code",[t._v("flex")])]),t._v(" "),a("li",[a("code",[t._v("flex-basis")])]),t._v(" "),a("li",[a("code",[t._v("flex-shrink")])]),t._v(" "),a("li",[a("code",[t._v("flex-grow")])]),t._v(" "),a("li",[a("code",[t._v("justify-self")])]),t._v(" "),a("li",[a("code",[t._v("align-self")])])])])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-09-react-router-5-新特性-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-09-react-router-5-新特性-✅"}},[t._v("#")]),t._v(" 2019-08-09: react router 5 新特性 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("参考链接")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://reacttraining.com/blog/react-router-v5/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Router v5"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("一句话")])]),t._v(" "),a("ul",[a("li",[t._v("One of the main new features in this release is the ability to use an array in "),a("code",[t._v("Route path")]),t._v(", so if you want to render the same component at 2 different route paths, you no longer have to create 2 routes.")]),t._v(" "),a("li",[t._v("因为写错版本号导致的大版本升级")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-08-react-router-4-中-switch-的作用-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-08-react-router-4-中-switch-的作用-✅"}},[t._v("#")]),t._v(" 2019-08-08: react router 4 中 Switch 的作用 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/ed5e56994f13",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-router v4 之 啥是"),a("code",[t._v("Switch")]),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("Switch 是唯一的因为它仅仅只会渲染一个路径。相比之下（不使用 Switch 包裹的情况下），每一个被 location 匹配到的 Route 将都会被渲染。")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-07-node-中的-setimmediate-和-process-nexttick-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-07-node-中的-setimmediate-和-process-nexttick-✅"}},[t._v("#")]),t._v(" 2019-08-07: Node 中的 setImmediate 和 process.nextTick ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("参考链接")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/02/node-event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node 定时器详解"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("一句话")])]),t._v(" "),a("ul",[a("li",[t._v("Node 的异步语法比浏览器更复杂，因为它可以跟内核对话")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5 3 4 1 2")]),t._v("\n")])])]),a("ul",[a("li",[t._v("异步任务分为两种\n"),a("ul",[a("li",[t._v("追加在本轮循环的异步任务")]),t._v(" "),a("li",[t._v("追加在次轮循环的异步任务")])])]),t._v(" "),a("li",[t._v("微任务\n"),a("ul",[a("li",[t._v('根据语言规格，Promise 对象的回调函数，会进入异步任务里面的"微任务"（microtask）队列。')]),t._v(" "),a("li",[t._v("微任务队列追加在 process.nextTick 队列的后面，也属于本轮循环。")])])]),t._v(" "),a("li",[t._v("宏任务\n"),a("ul",[a("li",[t._v("setImmediate, setTimeout")]),t._v(" "),a("li",[t._v("追加在次轮循环")])])]),t._v(" "),a("li",[t._v("事件循环分为六个阶段")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-07-node-中的-error-有哪些类型-对-throw-关键字的理解。-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-07-node-中的-error-有哪些类型-对-throw-关键字的理解。-✅"}},[t._v("#")]),t._v(" 2019-08-07: Node 中的 Error 有哪些类型？对 throw 关键字的理解。 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api/errors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Error (错误)"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("Node.js 应用程序一般会遇到以下四类错误：\n"),a("ul",[a("li",[t._v("标准的 JavaScript 错误，例如 "),a("code",[t._v("EvalError、SyntaxError、RangeError、ReferenceError、TypeError 或 URIError")]),t._v("。")]),t._v(" "),a("li",[t._v("由底层操作系触发的系统错误，例如试图打开不存在的文件、或试图使用已关闭的 socket 发送数据。")]),t._v(" "),a("li",[t._v("由应用程序代码触发的用户自定义的错误。")]),t._v(" "),a("li",[t._v("AssertionError 错误，当 Node.js 检测到不应该发生的异常逻辑时触发。这类错误通常来自 assert 模块。")]),t._v(" "),a("li",[t._v("所有由 Node.js 引起的 JavaScript 错误与系统错误都继承自或实例化自标准的 JavaScript "),a("code",[t._v("Error")]),t._v(" 类，且保证至少提供类中的属性。")])])]),t._v(" "),a("li",[t._v("throw 语句允许您创建自定义错误。从技术上讲您能够抛出异常（抛出错误）。异常可以是 JavaScript 字符串、数字、布尔或对象：")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-06-node-cluster-集群-作用及原理-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-06-node-cluster-集群-作用及原理-✅"}},[t._v("#")]),t._v(" 2019-08-06: Node cluster(集群) 作用及原理 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api/cluster.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cluster（集群）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://javascript.ruanyifeng.com/nodejs/cluster.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cluster 模块"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("单个 Node.js 实例运行在单个线程中。 为了充分利用多核系统，有时需要启用一组 Node.js 进程去处理负载任务。")]),t._v(" "),a("li",[t._v("cluster 模块可以创建共享服务器端口的子进程。")]),t._v(" "),a("li",[t._v("工作进程由 child_process.fork() 方法创建，因此它们可以使用 IPC 和父进程通信，从而使各进程交替处理连接服务。")]),t._v(" "),a("li",[t._v("cluster 模块允许设立一个主进程和若干个 worker 进程，由主进程监控和协调 worker 进程的运行。worker 之间采用进程间通信交换消息，cluster 模块内置一个负载均衡器，采用 Round-robin 算法协调各个 worker 进程之间的负载。运行时，所有新建立的链接都由主进程完成，然后主进程再把 TCP 连接分配给指定的 worker 进程。")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-05-preventdefault-stoppropagation-stopimmediatepropagation-区别-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-05-preventdefault-stoppropagation-stopimmediatepropagation-区别-✅"}},[t._v("#")]),t._v(" 2019-08-05: preventDefault(), stopPropagation(), stopImmediatePropagation() 区别 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000014165022",target:"_blank",rel:"noopener noreferrer"}},[t._v("preventDefault, stopPropagation, stopImmediatePropagation 三者的区别"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("preventDefault: 如果当前 event.cancelable 属性为 true，则取消的当前事件的默认动作，但不阻止当前事件的进一步传播")]),t._v(" "),a("li",[t._v("stopPropagation: 阻止当前冒泡或捕获阶段的进一步传播")]),t._v(" "),a("li",[t._v("stopImmediatePropagation: 阻止调用相同事件的其他监听器")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-04-child-process-exec-spawn-fork-send-作用和区别-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-04-child-process-exec-spawn-fork-send-作用和区别-✅"}},[t._v("#")]),t._v(" 2019-08-04: child_process exec, spawn, fork, send 作用和区别 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("参考链接")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://javascript.ruanyifeng.com/nodejs/child-process.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Child Process 模块"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://hoolev.github.io/program/2014/10/23/compare-exec-and-spawn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js 中 exec 和 spawn 方法的区别"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("一句话")])]),t._v(" "),a("ul",[a("li",[t._v("exec 方法执行一个命令，返回一个流对象，也可以用回调函数的方式")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls -l'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stdout: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stdout: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'closing code: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("spawn 没有回调函数，需拆分参数，返回一个流对象")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child_process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/bin/ls'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-l'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("child_process.exec 返回整个子进程处理时产生的 buffer，这个 buffer 默认大小是 200K。 当子进程返回的数据超过默认大小时，程序就会产生”Error: maxBuffer exceeded”异常")]),t._v(" "),a("li",[t._v("spawn 没有 maxBuffer 限制")]),t._v(" "),a("li",[t._v("fork 方法直接创建一个子进程，执行 Node 脚本")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child_process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./child.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PARENT got message:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// child.js")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CHILD got message:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("send 用于 fork 进程间的通信")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-03-child-process-原理-如何和主进程通信-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-03-child-process-原理-如何和主进程通信-✅"}},[t._v("#")]),t._v(" 2019-08-03: child_process 原理 ？如何和主进程通信 ？ ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api/child_process.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("child_process（子进程）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.shangyang.me/2018/02/23/javascript-nodejs-02-childprocess/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nodejs 系列二：Child Process 子进程"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("Nodejs 运行时刻的主进程既是 Event Loop 进程，通过该进程可以创建出任意多个子进程( Child Process )，并且子进程和父进程维护了三个特殊的管道，分别是 stdin、stdout 以及 stderr 这样的三个管道，父进程和子进程可以通过这些管道实现无阻塞( non-blocking) 的通讯方式")]),t._v(" "),a("li",[t._v("通过标准输入输出和主进程通信")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("child stdout: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("stderror ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-02-如何理解-nodejs-中的-buffer-有哪些方法-有何应用-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-02-如何理解-nodejs-中的-buffer-有哪些方法-有何应用-✅"}},[t._v("#")]),t._v(" 2019-08-02: 如何理解 NodeJS 中的 Buffer ？有哪些方法 ？ 有何应用 ？ ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Buffer（缓冲器）"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("Buffer 是在内存中开辟的一片区域，用于存放二进制数据。Buffer 所开辟的是堆外内存。")]),t._v(" "),a("li",[t._v("主要应用于流和存储需要占用大量内存的数据")]),t._v(" "),a("li",[a("code",[t._v("Buffer.from(array | string | object | bufferArray)")]),t._v(" - 创建一个 buffer")]),t._v(" "),a("li",[a("code",[t._v("Buffer.alloc(size)")]),t._v(" - 分配内存空间")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2019-08-01-解释线程、进程-并行、并发-同步、异步-阻塞、非阻塞-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2019-08-01-解释线程、进程-并行、并发-同步、异步-阻塞、非阻塞-✅"}},[t._v("#")]),t._v(" 2019-08-01: 解释线程、进程，并行、并发，同步、异步，阻塞、非阻塞 ✅")]),t._v(" "),a("details",[a("summary",[t._v("好好想想先 😌 ")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程与线程的一个简单解释"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/b11e251d3dc7",target:"_blank",rel:"noopener noreferrer"}},[t._v("并发与并行的区别"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("strong",[t._v("一句话")]),t._v(" "),a("ul",[a("li",[t._v("线程和进程\n"),a("ul",[a("li",[t._v("一个程序至少有一个进程,一个进程至少有一个线程")]),t._v(" "),a("li",[t._v("进程（英语：process），是指计算机中已运行的程序。进程为曾经是分时系统的基本运作单位。在面向进程设计的系统（如早期的 UNIX，Linux 2.4 及更早的版本）中，进程是程序的基本执行实体；在面向线程设计的系统（如当代多数操作系统、Linux 2.6 及更新的版本）中，进程本身不是基本运行单位，而是线程的容器。")]),t._v(" "),a("li",[t._v("线程（英语：thread）是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。在 Unix System V 及 SunOS 中也被称为轻量进程（lightweight processes），但轻量进程更多指内核线程（kernel thread），而把用户线程（user thread）称为线程。")])])]),t._v(" "),a("li",[t._v("并行和并发\n"),a("ul",[a("li",[t._v("并发:一个处理器同时处理多个任务。")]),t._v(" "),a("li",[t._v("并行:多个处理器或者是多核的处理器同时处理多个不同的任务.")]),t._v(" "),a("li",[t._v("前者是逻辑上的同时发生（simultaneous），而后者是物理上的同时发生。")])])]),t._v(" "),a("li",[t._v("同步和异步\n"),a("ul",[a("li",[t._v("同步是阻塞模式，异步是非阻塞模式。")]),t._v(" "),a("li",[t._v("同步就是指一个进程在执行某个请求的时候，若该请求需要一段时间才能返回信息，那么这个进程将会一直等待下去，知道收到返回信息才继续执行下去；")]),t._v(" "),a("li",[t._v("异步是指进程不需要一直等下去，而是继续执行下面的操作，不管其他进程的状态。当有消息返回式系统会通知进程进行处理，这样可以提高执行的效率。")])])])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);